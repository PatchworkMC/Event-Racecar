buildscript {
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'checkstyle'
	id 'maven'
	id 'java-library'
	id 'maven-publish'
}

sourceCompatibility = 1.8
def ENV = System.getenv()
if (ENV.MAVEN_PASSWORD) {
	def versionName = System.getenv("GITHUB_REF")
	versionName = versionName.substring(10)
	if (versionName.startsWith("v")) {
		versionName = versionName.substring(1) //strip "v" in "v1.0.0" etc.
	}
	version = versionName
} else if (ENV.GITHUB_SHA) {
	version = System.getenv("GITHUB_SHA").substring(0, 9)
} else {
	version = 'LOCAL'
}

group 'net.patchworkmc'
archivesBaseName = 'event-racecar'

repositories {
	mavenCentral()
	maven {
		name = 'forge'
		url = 'http://files.minecraftforge.net/maven'
	}
}

dependencies {
	implementation 'org.apache.logging.log4j:log4j-api:2.8.1'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	implementation 'net.jodah:typetools:0.8.+'
}

task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set('sources')
	from sourceSets.main.allSource
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			afterEvaluate {
				artifact jar
				artifact sourcesJar
			}
		}
	}

	repositories {
		if (ENV.MAVEN_PASSWORD) {
			maven {
				url 'https://maven.patchworkmc.net/releases'
				credentials {
					username "patchworkmc"
					password ENV.MAVEN_PASSWORD
				}
			}
		}
	}
}
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

checkstyle {
	configFile = rootProject.file("checkstyle.xml")
	toolVersion = '8.25'
}
